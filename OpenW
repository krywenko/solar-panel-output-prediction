#!/bin/bash
LAT=51.4298255        #your latitude
LON=-97.4662374       #your longitude 
API=  #openweather api key
P_offset=1
Wm2=1000   # maxium solar potential
ACO=0.80     # average cloud opacitity 0.6 - 0.9 

 #JSON=$(cat JSon1)


JSON=$(lynx -dump "https://api.openweathermap.org/data/2.5/onecall?lat=$LAT&lon=$LON&exclude=minutely,current,alerts&appid=$API" )
echo $JSON |jq '.hourly[] | "\(.dt) \(.clouds) \(.visibility)"' | tr -d '"'|tr " "  "," > /dev/shm/cloudiness

PCloud=-1



echo timestamp,potenial,wattage,predicted%,C%,Wm2 > OpenW.csv 

while IFS=, read -r Time Cloud Vis
do

number=$(date -d @$Time +"%H" )

number=$(echo "$number *2" | bc )
#month=$(date -d @$Time +"%m" )
DAY=$(date -d @$Time +%j )
#echo $DAY



############ Time Extropatation #########################

if [ $PCloud == -1 ]
then
PCloud=$Cloud
PTIME=$Time
PVis=$Vis

numberA=$(echo "$number - $P_offset" | bc -l )
potential=$(./panelconf $numberA)

output=$(python3 -W ignore radiation.py -lon $LON -lat $LAT -t $Time)
OUTPUT=$(printf "%0.2f\n" $output)
Opac=$(echo $Cloud*$ACO |bc -l)
TMP=$(echo 100-$Opac |bc -l)
TMP=$(echo $TMP/100 |bc -l)
VisA=$(echo $Vis/10000 |bc -l)

#echo "scale=4;(($output*$TMP) * $VisA)/$Wm2" | bc -l
output=$( echo "scale=4;((($output*$TMP) * $VisA)/$Wm2)" | bc -l)
pot=$(echo $potential* $output | bc )
pot=$(printf "%0.2f\n" $pot)

echo $Time $potential  $pot $output $Cloud $OUTPUT |tr " "  "," >> OpenW.csv

##### mqtt send to database ##################
   mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W' -m "$Time:$pot"
   mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W1-O' -m "$Time:$OUTPUT"
   mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_C1' -m "$Time:$Cloud"
  echo   $numberA,$potential,$pot,$output,$Cloud
 else
 ########### extroplate ###############
 PTIME=$(echo $PTIME + 1800 | bc)
 PCloud=$(echo "($Cloud + $PCloud)/2" |bc)
 PVis=$(echo "($Vis + $PVis)/2" |bc)
 output=$(python3 -W ignore radiation.py -lon $LON -lat $LAT -t $PTIME)
 OUTPUT=$(printf "%0.2f\n" $output)
Opac=$(echo $PCloud*$ACO |bc -l)
TMP=$(echo 100-$Opac |bc -l)
TMP=$(echo $TMP/100 |bc -l)
PVis=$(echo $PVis/10000 |bc -l)
numberB=$(echo "$number - ($P_offset*2) " | bc -l )
potential=$(./panelconf $numberB)

#echo "scale=4;(($output*$TMP) * $PVis)/$Wm2" | bc -l
output=$( echo "scale=4;((($output*$TMP) * $PVis)/$Wm2)" | bc -l)
pot=$(echo $potential* $output | bc )
pot=$(printf "%0.2f\n" $pot)
echo $PTIME $potential  $pot $output $Cloud $OUTPUT | tr " "  ","  >> OpenW.csv
##### mqtt send to database ##################
  mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W' -m "$PTIME:$pot"
  mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W1' -m "$PTIME:$OUTPUT"
  mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_C1' -m "$PTIME:$PCloud"

echo   $numberB,$potential,$pot,$output,$PCloud,
 ############# end of extropation ###############
 
output=$(python3 -W ignore radiation.py -lon $LON -lat $LAT -t $Time)
OUTPUT=$(printf "%0.2f\n" $output)
Opac=$(echo $Cloud*$ACO |bc -l)
TMP=$(echo 100-$Opac |bc -l)
TMP=$(echo $TMP/100 |bc -l)
VisC=$(echo $Vis/10000 |bc -l)
numberC=$(echo "$number - $P_offset" | bc -l )
potential=$(./panelconf $numberC)

#echo "scale=4;(($output*$TMP) * $VisC)/$Wm2" | bc -l
output=$( echo "scale=4;((($output*$TMP) * $VisC)/$Wm2)" | bc )
pot=$(echo $potential* $output | bc -l)

echo $Time $potential  $pot $output $Cloud $OUTPUT |tr " "  "," >> OpenW.csv

##### mqtt send to database ##################
  mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W' -m "$Time:$pot"
   mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_W1' -m "$Time:$OUTPUT" 
  mosquitto_pub -h 192.168.168.251 -t 'incoming/test/mqtt-Energy/power-predict_C1' -m "$Time:$Cloud"

 echo   $numberC,$potential,$pot,$output,$Cloud 
  
PCloud=$Cloud
PTIME=$Time
PVis=$Vis 

 fi
done < /dev/shm/cloudiness


